version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
          when: on_fail

workflows:
  version: 2
  build:
    jobs:
      # - build
      # - create_infrastructure
      # - configure_infrastructure
      # - smoke_test:
          # requires:
          #   - configure_infrastructure
      - roll_back

jobs:
  roll_back:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name prod-${CIRCLE_WORKFLOW_ID}
      - run: return 1
      - destroy_environment
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test
            command: |
              URL="http://52.27.160.119:3000/"
              if curl -s --head ${URL} # test if blog.udacity. com exists
              then
               return 0
              else
               return 1
              fi
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["d9:19:57:31:ba:fa:b9:40:80:63:6d:68:cd:87:59:de"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory playbook.yml
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: make backend infrastructure
          command: |
            aws cloudformation deploy --template-file template.yml --stack-name ci-stack
  build:
    working_directory: ~/mern-starter
    docker:
      - image: circleci/node:10.16.3
      - image: mongo:4.2.0
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm test
      - run:
          name: code-coverage
          command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results.xml
